generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CLIENT
}

model User {
  id              String   @id @unique @default(uuid()) @db.Uuid
  alma_id         String   @unique @db.Uuid
  name            String   @unique @db.VarChar(250)
  social_name     String?  @db.VarChar(250)
  role            UserRole
  professional_id String?  @db.Uuid
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt()

  professional       User?               @relation("ProfessionalClients", fields: [professional_id], references: [id])
  clients            User[]              @relation("ProfessionalClients")
  schedulers         Scheduler[]         @relation("SchedulerProfessional")
  appointmentRecords AppointmentRecord[] @relation("AppointmentRecordProfessional")
  clientRecords      AppointmentRecord[] @relation("AppointmentRecordClient")

  @@map("users")
}

model Scheduler {
  id              String   @id @unique @default(uuid()) @db.Uuid
  client_name     String
  client_phone    String
  scheduled_at    DateTime
  professional_id String   @db.Uuid

  professional       User                @relation("SchedulerProfessional", fields: [professional_id], references: [id])
  appointmentRecords AppointmentRecord[] @relation("AppointmentRecordScheduler")

  @@map("schedules")
}

model AppointmentRecord {
  id              String   @id @unique @default(uuid()) @db.Uuid
  professional_id String   @db.Uuid
  user_id         String   @db.Uuid
  appointment_id  String?
  actual_date     DateTime
  record          String

  professional User       @relation("AppointmentRecordProfessional", fields: [professional_id], references: [id])
  user         User       @relation("AppointmentRecordClient", fields: [user_id], references: [id])
  appointment  Scheduler? @relation("AppointmentRecordScheduler", fields: [appointment_id], references: [id])

  @@map("appointment_records")
}
